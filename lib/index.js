// Generated by CoffeeScript 1.3.3
var jar;

jar = typeof exports !== "undefined" && exports !== null ? exports : (this['jar'] = {});

jar.Cookie = (function() {

  function Cookie(name, value, options) {
    var date, _base;
    this.name = name;
    this.value = value;
    this.options = options;
    if (this.value === null) {
      this.value = '';
      this.options.expires = -(60 * 60 * 24);
    }
    if (this.options.expires) {
      if (typeof this.options.expires === 'number') {
        date = new Date();
        date.setTime(date.getTime() + (this.options.expires * 1000));
        this.options.expires = date;
      }
      if (this.options.expires instanceof Date) {
        this.options.expires = this.options.expires.toUTCString();
      }
    }
    (_base = this.options).path || (_base.path = '/');
  }

  Cookie.prototype.toString = function() {
    var domain, expires, path, secure;
    path = "; path=" + this.options.path;
    expires = (this.options.expires ? "; expires=" + this.options.expires : '');
    domain = (this.options.domain ? "; domain=" + this.options.domain : '');
    secure = (this.options.secure ? '; secure' : '');
    return [this.name, '=', this.value, expires, path, domain, secure].join('');
  };

  return Cookie;

})();

jar.Jar = (function() {

  function Jar() {}

  Jar.prototype.parse = function() {
    var cookie, m, _i, _len, _ref;
    this.cookies = {};
    _ref = this._getCookies().split(/;\s/g);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cookie = _ref[_i];
      m = cookie.match(/([^=]+)=(.*)/);
      if (Array.isArray(m)) {
        this.cookies[m[1]] = m[2];
      }
    }
  };

  Jar.prototype.encode = function(value) {
    return encodeURIComponent(JSON.stringify(value));
  };

  Jar.prototype.decode = function(value) {
    return JSON.parse(decodeURIComponent(value));
  };

  Jar.prototype.get = function(name, options) {
    var value;
    if (options == null) {
      options = {};
    }
    value = this.cookies[name];
    if (!('raw' in options) || !options.raw) {
      try {
        value = this.decode(value);
      } catch (e) {
        return;
      }
    }
    return value;
  };

  Jar.prototype.set = function(name, value, options) {
    var cookie;
    if (options == null) {
      options = {};
    }
    if (!('raw' in options) || !options.raw) {
      value = this.encode(value);
    }
    cookie = new jar.Cookie(name, value, options);
    this._setCookie(cookie);
    this.cookies[name] = value;
  };

  return Jar;

})();

if (typeof process !== "undefined" && process !== null ? process.pid : void 0) {
  require('./node');
}
