// Generated by CoffeeScript 1.3.1
var jar;

jar = typeof exports !== "undefined" && exports !== null ? exports : (this['jar'] = {});

jar.Jar = (function() {

  Jar.name = 'Jar';

  function Jar() {}

  Jar.prototype.parse = function() {
    var cookie, m, _i, _len, _ref;
    this.cookies = {};
    _ref = this._getCookies().split(/;\s/g);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cookie = _ref[_i];
      m = cookie.match(/([^=]+)=(.*)/);
      if (Array.isArray(m)) {
        this.cookies[m[1]] = m[2];
      }
    }
  };

  Jar.prototype.get = function(name) {
    try {
      return JSON.parse(decodeURIComponent(this.cookies[name]));
    } catch (e) {

    }
  };

  Jar.prototype.set = function(name, value, options) {
    var cookie, date, domain, encoded, expires, path, secure;
    if (options == null) {
      options = {};
    }
    if (value === null) {
      value = '';
      options.expires = -(60 * 60 * 24);
    }
    if (options.expires) {
      if (typeof options.expires === 'number') {
        date = new Date();
        date.setTime(date.getTime() + (options.expires * 1000));
        options.expires = date;
      }
      if (options.expires instanceof Date) {
        options.expires = options.expires.toUTCString();
      }
    }
    expires = (options.expires ? "; expires=" + options.expires : '');
    path = (options.path ? "; path=" + options.path : '');
    domain = (options.domain ? "; domain=" + options.domain : '');
    secure = (options.secure ? '; secure' : '');
    encoded = encodeURIComponent(JSON.stringify(value));
    cookie = [name, '=', encoded, expires, path, domain, secure].join('');
    return this._setCookie(cookie);
  };

  return Jar;

})();

if (typeof process !== "undefined" && process !== null ? process.pid : void 0) {
  require('./node');
}
